/// <reference path="decl/references.ts" />
/// <reference path="activation/Runtime.ts" />
/// <reference path="activation/ActivationContext.ts" />
/// <reference path="servicehost/Host.ts" />

export function create_runtime(source:string, callback:(runtime:appex.activation.Runtime)=>void) : void {
    
    var runtime = new appex.activation.Runtime();

    runtime.start(source, (context, reflection) => {
        
        callback(runtime)
    });
}

export function create_activation_context(runtime:appex.activation.Runtime, callback:(activation_context:appex.activation.ActivationContext)=>void) : void {
    
    var activation = new appex.activation.ActivationContext(runtime);

    callback(activation);
}

export function create_service_host (activation_context:appex.activation.ActivationContext, callback:(activation_context:appex.servicehost.Host)=>void) : void {

    var service_host = new appex.servicehost.Host(activation_context);

    callback(service_host);
}

export function create(source:string, callback:(host:appex.servicehost.Host) => void): void {
    
    create_runtime(source, function(runtime) {
           
        create_activation_context(runtime, function(activation_context) {

            create_service_host(activation_context, function(service_host) {

                callback(service_host);
            
            });
        }); 
    });
}








 

