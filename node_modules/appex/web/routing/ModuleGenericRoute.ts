// Copyright (c) 2013 haydn paterson (sinclair).  All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/// <reference path="IRoute.ts" />
/// <reference path="../../modules/Module.ts" />

module appex.web.routing {

    export class ModuleGenericRoute implements appex.web.routing.IRoute {
        
        public pathname : string;

        constructor(public moduleExport : appex.modules.ModuleExport) {
            
            this.initialize();
        }

        public match ( request : http.ServerRequest) : boolean {
            
            var attribute = this.moduleExport.attribute();

            if(attribute) {
            
                if(attribute.verbs) {
                    
                    if( Object.prototype.toString.call( attribute.verbs ) === '[object Array]' ) {
                            
                        for(var n in attribute.verbs ) {
                            
                            if( Object.prototype.toString.call( attribute.verbs[n] ) === '[object String]' ) {
                            
                                   console.log(attribute.verbs[n]);
                            }
                        }
                    }
                }
            }

            var url = node.url.parse(request.url);

            return this.pathname == url.pathname;
        }

        public handler ( context : any, request:http.ServerRequest, response:http.ServerResponse ) : boolean {
        
            var accessor = this.moduleExport.accessor();

            if(accessor) {

                var attribute = this.moduleExport.attribute();

                if(attribute) {
                    
                    context.attribute = attribute;
                }
                            
                accessor(context);

                return true;
            }

            throw new Error('appex.web.routing.ModuleGenericRoute : unable to load accessor from moduleExport.');

            return false;
        }

        private initialize() : void {
            
            var method = <typescript.api.Method>this.moduleExport.type;

            var scope  = method.scope;

            if(scope.length > 0) {

                if(scope[0].indexOf('"') !== -1) {
                    
                    scope = scope.slice(1);
                }
            }

            if(scope.length == 0) 
            {        
                this.pathname = '/' + method.name;
            } 
            else  
            {
                this.pathname = '/' + scope.join('/') + '/' + method.name;
            }        
        }
    }

}