// Copyright (c) 2013 haydn paterson (sinclair).  All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/// <reference path="../../references.ts" />
/// <reference path="../../modules/Module.ts" />
/// <reference path="IRoute.ts" />

module appex.web.routing {

    export class ModuleJsonRoute implements appex.web.routing.IRoute {
        
        public pathname     : string;

        public requestType  : typescript.api.Type;

        public responseType : typescript.api.Type;

        constructor(public moduleExport : appex.modules.ModuleExport) {
            
            this.initialize();
        }

        public match ( request : http.ServerRequest ) : boolean {
        
            var url       = node.url.parse(request.url);

            var attribute = this.moduleExport.attribute();

            if(!attribute) {
            
                return this.pathname == url.pathname;
            } 
            else 
            {
                if(attribute.verbs) {
                    
                    if( Object.prototype.toString.call( attribute.verbs ) === '[object Array]' ) {
                            
                        for(var n in attribute.verbs ) {
                            
                            if( Object.prototype.toString.call( attribute.verbs[n] ) === '[object String]' ) {
                            
                                if(attribute.verbs[n].toLowerCase() == request.method.toLowerCase()) {
                                    
                                    return this.pathname == url.pathname;
                                }
                                return false;
                            }
                            return false;
                        }
                        return false;
                    }
                    return false;
                }                
            }
        }

        public handler( context : any, request:http.ServerRequest, response:http.ServerResponse ) : boolean {
            
            var accessor = this.moduleExport.accessor();

            if(accessor) {

                var attribute = this.moduleExport.attribute();

                if(attribute) {
                
                    context.attribute = attribute;
                }

                this.read_request(request, (input) => {

                    accessor( context, input, (output) => {
                                
                        this.write_response(output, response);
                    });
                });

                return true;
            }

            throw new Error("appex.web.routing.ModuleJsonRoute : unable to load accessor from moduleExport.");

            return false;
        }


        private read_request (request:http.ServerRequest, callback:(obj:any) => void) : void {
           
            var buffer = [];

            request.on('data', (chunk) => {  buffer.push(chunk); });

            request.on('end', () => { 
                
                try  {

                    var obj = JSON.parse( buffer.join('') );

                    callback(obj);
                } 
                catch(error) {

                    callback(null);
                }
            }); 
        }

        private write_response (obj:any, response:http.ServerResponse): void {
        
            try {

                var json = JSON.stringify(obj, null, '');
                
                response.writeHead(200, {'content-type' : 'application/json'});

                response.write(json);

                response.end();
            } 
            catch(error) {

                response.writeHead(500, {'content-type' : 'application/json'});

                response.write(error.toString());

                response.end();
            }            
        }
        
        private initialize() : void {
            
            var method = <typescript.api.Method>this.moduleExport.type;

            try 
            {
                this.requestType  = method.parameters[1].type;
            
                this.responseType = method.parameters[2].type.signature.parameters[0].type;
            } 
            catch(e) 
            {
                throw new Error('appex.web.routing.ModuleJsonRoute : unable to load request and response type.')     
            }

            var scope  = method.scope;

            if(scope.length > 0) {

                if(scope[0].indexOf('"') !== -1) {
                    
                    scope = scope.slice(1);
                }
            }

            if(scope.length == 0) 
            {       
                this.pathname = '/' + method.name;
            } 
            else  
            {
                this.pathname = '/' + scope.join('/') + '/' + method.name;
            } 
        }
    }
}