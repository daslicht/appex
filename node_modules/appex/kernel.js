// Copyright (c) 2013 haydn paterson (sinclair).  All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

var vm       = require('vm');

var delegate = null;


/** initialize the kernal.
*
*   arguments:
*       message - the message containing the callers filename.
*/
function setup(message) {
    
    process.mainModule.filename = message.filename;
    
    var sandbox = {	

        __filename  : __filename,

        __dirname   : __dirname,	    

        global	    : global,

        process     : process,

        require     : require,	

        console     : console,

        exports     : null,   
    };
	
    var script = vm.createScript('exports = ' + message.body.code, 'worker.js' );

    script.runInNewContext ( sandbox );
	
    delegate = sandbox.exports;
}


/** calls the kernal with this message.
*
*   arguments:
*       message - the message being passed.
*/
function call(message) {
    
    delegate(message.body, function(response) {

        process.send({

            messageid : message.messageid,

            type      : 'call',

            body      : response
        });
    });
}


/* event handling */
process.on('message', function(message) {

    switch(message.type) {

        case "setup":

            setup(message);

            break;

        case "call":

            call(message);

            break;
    }    
});
