/// <reference path="../decl/references.ts" />

module appex.activation 
{
	export class Reflection 
	{	
		public scripts:Array<typescript.api.Script>;

		constructor()
		{
			this.scripts = new Array<typescript.api.Script>();
		}
	}

	export class Runtime
	{
		public context : any;

		public reflection : appex.activation.Reflection;

		constructor() 
		{
			this.reflection = new appex.activation.Reflection();
		}
		
		public start(sourcefile:string, callback:(context:any, reflection:appex.activation.Reflection)=>void) : void {
		
			tsapi.reset();

			var sources = [sourcefile];

			tsapi.resolve(sources, (resolved) => {
            
				tsapi.compile(resolved, (compiled) => {
					
					tsapi.run(compiled, null, (context) => {
						
						this.context = context;

						for(var n in compiled) 
						{
							this.reflection.scripts.push(compiled[n].reflection);
						}

						callback(this.context, this.reflection);
					});
				});
			});
		}
	}
}